# Primarily taken from rspack's build workflow definition:
# https://raw.githubusercontent.com/web-infra-dev/rspack/2f6696eb9c000e2af6a5d3c3c62b64cabd1566b1/.github/workflows/reusable-build.yml
name: Build intl-message-database

on:
  workflow_call:
    inputs:
      target: # Target triple for building the crate
        required: true
        type: string
      package-name: # npm package name that the target maps to
        required: true
        type: string
      runner:
        required: true
        type: string
      profile: # Rust profile, "debug" or "release"
        default: "release"
        required: false
        type: string
      ref: # Git reference to checkout
        required: false
        type: string

env:
  # This should ensure that the mac packages are allowed to run on all
  # supported macOS versions.
  MACOSX_DEPLOYMENT_TARGET: "10.13"

jobs:
  build:
    name: Build intl-message-database
    runs-on: ${{ inputs.runner }}
    defaults:
      run:
        shell: bash
    outputs:
      runner-labels: ${{ steps.upload-artifact.outputs.runner-labels || inputs.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          clean: ${{ startsWith(runner.name, 'GitHub Actions') }}

      - name: Git Clean
        if: ${{ !startsWith(runner.name, 'GitHub Actions') }}
        shell: bash
        run: |
          git clean -ffdx -e node_modules target
          git reset --hard HEAD

      - name: pnpm cache
        uses: ./.github/actions/pnpm-workspace
        with:
          frozen-lockfile: true
          save-if: ${{ github.ref_name == 'main' }}

      - name: Install Rust Toolchain
        uses: ./.github/actions/rustup
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          shared-key: build-${{ inputs.target }}

      - name: Setup Rust Target
        run: rustup target add ${{ inputs.target }}

      - name: Setup Apple Silicon Compilation Flags
        if: ${{ contains(inputs.target, 'aarch64-apple') }}
        run: |
          if [[ "${{ startsWith(runner.name, 'GitHub Actions') }}" == "true" ]]; then
            # Github runner
            sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
          fi
          export CC=$(xcrun -f clang);
          export CXX=$(xcrun -f clang++);
          SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
          export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";

      - name: Build intl-message-database
        run: |
          cd intl_message_database
          RUST_TARGET=${{inputs.target}} pnpm build:local-${{inputs.profile}}
          cp ./npm/local/intl-message-database.local.node ./npm/${{inputs.package-name}}/intl-message-database.${{inputs.package-name}}.node

      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: intl-message-database-${{ inputs.package-name }}
          path: intl_message_database/npm/${{ inputs.package-name }}/**
